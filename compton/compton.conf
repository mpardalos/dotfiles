# Thank you code_nomad: http://9m.no/ꪯ鵞

#################################
#
# Inactive Dim
#
#################################

# Dim inactive windows. (0.0 - 1.0)
inactive-dim = 0.2;
# Do not let dimness adjust based on window opacity.
inactive-dim-fixed = true;

#################################
#
# Opacity
#
#################################

# active-opacity = 0.95;
# inactive-opacity = 0.1;
# inactive-opacity-override = false;

# # Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
# blur-background = true;
# # Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# blur-background-fixed = true;
# Let blur radius adjust based on window opacity.
# blur-background-fixed = true;
# blur-background-exclude = [
#     "window_type = 'desktop'"
# ];	

# blur-kern = "11x11gaussian";
# blur-kern = "11,11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
# blur-kern = "5,5,10,10,10,10,10,10,5,5,5,10,10,5,5,10,10,5,5,5,10,10,10,10,10,10";
# blur-kern = "7x7box"
# blur-background-exclude = [
#     "! class_g ?= 'rofi'",
# ];

# opacity-rule = [ "70:class_g ?= 'rofi'" ];
# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 20;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.2;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.2;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];


#################################
#
# Shadows
#
#################################
shadow = false;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

#################################
#
# Window type settings
#
#################################

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = false;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
};

#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
# Useful with --glx-swap-method, as well.
glx-copy-from-front = false;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = true;

#################################
#
# Backend
#
#################################

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
refresh-rate = 0;

vsync = true;

use-ewmh-active-win = true;
# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = true;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [ "class_i = 'rofi'" ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

