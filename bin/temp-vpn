#!/usr/bin/env bash

SERVER_NAME="temp-vpn"
IMAGE_NAME="rocky-9"
SERVER_TYPE="cx11" # Cheapest instance
DATACENTER="nbg1-dc3" # Nuremberg, Germany

usage() {
    echo "Provision a temporary tailscale exit-node on Hetzner cloud"
    echo ""
    echo "Usage:"
    echo "  $(basename $0) <create|destroy|status|help>"
    echo ""
    echo "Commands:"
    echo "  status       Show information about the vpn (default)"
    echo "  help         Show this help message"
    echo "  create       Create the instance (if it does not exist)"
    echo "  destroy      Destroy the instance (if it exists)"
    echo "  interactive  Show the status and prompt to create/destroy the server"
}

COMMAND=$1

server-exists() {
    hcloud server list -o noheader -o columns=name | grep "^${SERVER_NAME}$" >/dev/null
}

create() {
    if server-exists; then
        echo Already exists
        exit 0
    fi

    echo "> Create server"
    SERVER_INFO=$(
        hcloud server create \
            --name "$SERVER_NAME" \
            --image "$IMAGE_NAME" \
            --type "$SERVER_TYPE" \
            --datacenter "$DATACENTER" \
            --ssh-key "mpardalos@odin" \
            --ssh-key "mpardalos@magni" \
            --output json
               )

    IP_ADDR=$(jq -r '.server.public_net.ipv4.ip' <<<"$SERVER_INFO")
    echo "IP Address: $IP_ADDR"

    echo "> Wait for SSH to be up"
    until ssh -o"StrictHostKeyChecking=accept-new" root@$IP_ADDR 'echo I am up'; do
        sleep 1
    done

    echo "> Provision server"
    ssh root@$IP_ADDR bash -s <<-EOF
        echo 'net.ipv4.ip_forward = 1' >> /etc/sysctl.d/99-tailscale.conf
        echo 'net.ipv6.conf.all.forwarding = 1' >> /etc/sysctl.d/99-tailscale.conf
        sysctl -p /etc/sysctl.d/99-tailscale.conf
        curl -fsSL https://tailscale.com/install.sh | sh
        tailscale up --advertise-exit-node
EOF

    tailscale_ip=$(ssh root@$IP_ADDR 'tailscale status --json' | jq -r '.Self.TailscaleIPs[0]')

    echo
    echo "> You need to approve $SERVER_NAME to be used as an exit node."
    echo "> Go to this url to approve it: "
    echo ">"
    echo ">         https://login.tailscale.com/admin/machines"
    echo ">"
    echo "> More information at https://tailscale.com/kb/1103/exit-nodes#step-3-allow-the-exit-node-from-the-admin-console"
    echo "> Afterwards, you can you can route your internet traffic through it by running"
    echo ">"
    echo ">         tailscale set --exit-node=$tailscale_ip"
    echo ">"
    echo "> Or using Trayscale"
}

destroy() {
    if !(server-exists); then
        echo Does not exist
        exit 0
    fi

    echo "> Get server IP"
    IP_ADDR=$(hcloud server list -o noheader -o columns=name,ipv4 | awk '/^temp-vpn/ { print $2 }')

    echo "> Forget server host key"
    ssh-keygen -R $IP_ADDR

    echo "> Destroy server"
    hcloud server delete "$SERVER_NAME"

    echo "> You might want to remove the node from your tailnet here:"
    echo ">         https://login.tailscale.com/admin/machines"
    echo "> Look for a node named $SERVER_NAME or $SERVER_NAME-<number>"
}

status() {
    if server-exists >/dev/null; then
        echo "Server exists"
    else
        echo "Server does not exist"
    fi

    echo
    echo "Matching tailscale nodes:"
    tailscale status | grep "$SERVER_NAME"
}

interactive() {
    status

    if server-exists; then
        echo -n "Server exists. Would you like to destroy it? [Y/n] "
        read response

        case $response in
            y|Y|"") destroy ;;
        esac
    else
        echo -n "Server does not exist. Would you like to create it? [Y/n] "
        read response

        case $response in
            y|Y|"") create ;;
        esac
    fi

}

case $COMMAND in
    create) create ;;
    destroy) destroy ;;
    status) status ;;
    interactive) interactive ;;
    help) usage; exit 0 ;;
    *) echo -e "Unknown command: $COMMAND\n"; usage; exit 1 ;;
esac
